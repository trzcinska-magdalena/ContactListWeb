{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContactDetailComponent = class ContactDetailComponent {\n  constructor(contactListService, route, router) {\n    this.contactListService = contactListService;\n    this.route = route;\n    this.router = router;\n    this.contact = {\n      id: 0,\n      name: '',\n      surname: '',\n      email: '',\n      password: '',\n      phone: '',\n      birthDate: undefined,\n      categoryID: 0,\n      subcategoryID: 0,\n      subcategoryOther: null\n    };\n    this.categories = [];\n    this.subcategories = [];\n    this.errors = [];\n  }\n  ngOnInit() {\n    let id = this.route.snapshot.paramMap.get('id');\n    this.contactListService.getCategories().subscribe(result => this.categories = result, error => console.error(error));\n    this.contactListService.getContact(id).subscribe(result => this.contact = result, error => console.error(error));\n  }\n  onChangeCategory(value) {\n    const idCategory = value.target.value;\n    this.contactListService.getSubategories(idCategory).subscribe(result => this.subcategories = result, error => console.error(error));\n  }\n  onSaveContact() {\n    this.contactListService.updateContact(this.contact).subscribe(result => this.router.navigate(['/']), error => {\n      console.error(error);\n      console.log(error.error.errors);\n      for (const key of Object.keys(error.error.errors)) {\n        for (const errorMessage of error.error.errors[key]) {\n          this.errors.push(`${key}: ${errorMessage}`);\n        }\n      }\n      console.log(this.errors);\n    });\n  }\n};\nContactDetailComponent = __decorate([Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})], ContactDetailComponent);\nexport { ContactDetailComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAwB,eAAe;AAYlD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAiBjCC,YAAoBC,kBAAsC,EAAUC,KAAqB,EAAUC,MAAc;IAA7F,uBAAkB,GAAlBF,kBAAkB;IAA8B,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;IAhBzG,YAAO,GAAY;MACfC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAEC,SAAS;MACpBC,UAAU,EAAE,CAAC;MACbC,aAAa,EAAE,CAAC;MAChBC,gBAAgB,EAAE;KACrB;IACD,eAAU,GAAe,EAAE;IAC3B,kBAAa,GAAkB,EAAE;IACjC,WAAM,GAAa,EAAE;EAGrB;EAEAC,QAAQ;IACN,IAAIX,EAAE,GAAG,IAAI,CAACF,KAAK,CAACc,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAE/C,IAAI,CAACjB,kBAAkB,CAACkB,aAAa,EAAE,CAACC,SAAS,CAAEC,MAAkB,IAAK,IAAI,CAACC,UAAU,GAAGD,MAAM,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAClI,IAAI,CAACtB,kBAAkB,CAACwB,UAAU,CAACrB,EAAE,CAAC,CAACgB,SAAS,CAAEC,MAAe,IAAK,IAAI,CAACK,OAAO,GAAGL,MAAM,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7H;EAEAI,gBAAgB,CAACC,KAAU;IACzB,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACF,KAAK;IACrC,IAAI,CAAC3B,kBAAkB,CAAC8B,eAAe,CAACF,UAAU,CAAC,CAACT,SAAS,CAAEC,MAAqB,IAAK,IAAI,CAACW,aAAa,GAAGX,MAAM,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACtJ;EAEAU,aAAa;IACX,IAAI,CAAChC,kBAAkB,CAACiC,aAAa,CAAC,IAAI,CAACR,OAAO,CAAC,CAChDN,SAAS,CACRC,MAAiB,IAAK,IAAI,CAAClB,MAAM,CAACgC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EACjDZ,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAEpBC,OAAO,CAACY,GAAG,CAACb,KAAK,CAACA,KAAK,CAACc,MAAM,CAAC;MAE/B,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACjB,KAAK,CAACA,KAAK,CAACc,MAAM,CAAC,EAAE;QACjD,KAAK,MAAMI,YAAY,IAAIlB,KAAK,CAACA,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC,EAAE;UAClD,IAAI,CAACD,MAAM,CAACK,IAAI,CAAC,GAAGJ,GAAG,KAAKG,YAAY,EAAE,CAAC;;;MAI/CjB,OAAO,CAACY,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IAC1B,CAAC,CACF;EACL;CAKD;AAvDYtC,sBAAsB,eALlCD,SAAS,CAAC;EACT6C,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW9C,sBAAsB,CAuDlC;SAvDYA,sBAAsB","names":["Component","ContactDetailComponent","constructor","contactListService","route","router","id","name","surname","email","password","phone","birthDate","undefined","categoryID","subcategoryID","subcategoryOther","ngOnInit","snapshot","paramMap","get","getCategories","subscribe","result","categories","error","console","getContact","contact","onChangeCategory","value","idCategory","target","getSubategories","subcategories","onSaveContact","updateContact","navigate","log","errors","key","Object","keys","errorMessage","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\trzci\\projekty-net\\ContactListWeb\\ClientApp\\src\\app\\components\\contact-detail\\contact-detail.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Category } from '../models/category';\r\nimport { Contact } from '../models/contact';\r\nimport { Subcategory } from '../models/subcategory';\r\nimport { ContactListService } from '../service/contact-list.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-detail',\r\n  templateUrl: './contact-detail.component.html',\r\n  styleUrls: ['./contact-detail.component.css']\r\n})\r\nexport class ContactDetailComponent implements OnInit {\r\n  contact: Contact = {\r\n      id: 0,\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n      password: '',\r\n      phone: '',\r\n      birthDate: undefined,\r\n      categoryID: 0,\r\n      subcategoryID: 0,\r\n      subcategoryOther: null\r\n  }\r\n  categories: Category[] = [];\r\n  subcategories: Subcategory[] = [];\r\n  errors: string[] = [];\r\n\r\n  constructor(private contactListService: ContactListService, private route: ActivatedRoute, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let id = this.route.snapshot.paramMap.get('id');\r\n\r\n    this.contactListService.getCategories().subscribe((result: Category[]) => this.categories = result, error => console.error(error));\r\n    this.contactListService.getContact(id).subscribe((result: Contact) => this.contact = result, error => console.error(error));\r\n  }\r\n\r\n  onChangeCategory(value: any) {\r\n    const idCategory = value.target.value;\r\n    this.contactListService.getSubategories(idCategory).subscribe((result: Subcategory[]) => this.subcategories = result, error => console.error(error));\r\n  }\r\n\r\n  onSaveContact() {\r\n    this.contactListService.updateContact(this.contact)\r\n      .subscribe((\r\n        result: Contact[]) => this.router.navigate(['/']),\r\n        error => {\r\n          console.error(error);\r\n\r\n          console.log(error.error.errors);\r\n\r\n          for (const key of Object.keys(error.error.errors)) {\r\n            for (const errorMessage of error.error.errors[key]) {\r\n              this.errors.push(`${key}: ${errorMessage}`);\r\n            }\r\n          }\r\n\r\n          console.log(this.errors);\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}