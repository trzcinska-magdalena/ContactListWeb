{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NewContactComponent = class NewContactComponent {\n  constructor(contactListService, router) {\n    this.contactListService = contactListService;\n    this.router = router;\n    this.categories = [];\n    this.subcategories = [];\n    this.categorySelected = \"\";\n    this.contact = {\n      id: 0,\n      name: '',\n      surname: '',\n      email: '',\n      password: '',\n      phone: '',\n      birthDate: undefined,\n      categoryID: 0,\n      subcategoryID: null,\n      subcategoryOther: null\n    };\n    this.errors = [];\n  }\n  ngOnInit() {\n    this.contactListService.getCategories().subscribe(result => this.categories = result, error => console.error(error));\n  }\n  onChangeCategory(value) {\n    const idCategory = value.target.value;\n    this.contactListService.getSubategories(idCategory).subscribe(result => this.subcategories = result, error => console.error(error));\n  }\n  onCreateContact() {\n    this.contactListService.createContact(this.contact).subscribe(result => this.router.navigate(['/']), error => {\n      console.error(error);\n      console.log(error.error.errors);\n      for (const key of Object.keys(error.error.errors)) {\n        for (const errorMessage of error.error.errors[key]) {\n          this.errors.push(`${key}: ${errorMessage}`);\n        }\n      }\n      console.log(this.errors);\n    });\n  }\n};\nNewContactComponent = __decorate([Component({\n  selector: 'app-new-contact',\n  templateUrl: './new-contact.component.html',\n  styleUrls: ['./new-contact.component.css']\n})], NewContactComponent);\nexport { NewContactComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAwB,eAAe;AAYlD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAmB9BC,YAAoBC,kBAAsC,EAAUC,MAAc;IAA9D,uBAAkB,GAAlBD,kBAAkB;IAA8B,WAAM,GAANC,MAAM;IAlB1E,eAAU,GAAe,EAAE;IAC3B,kBAAa,GAAkB,EAAE;IACjC,qBAAgB,GAAW,EAAE;IAC7B,YAAO,GAAY;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAEC,SAAS;MACpBC,UAAU,EAAE,CAAC;MACbC,aAAa,EAAE,IAAI;MACnBC,gBAAgB,EAAE;KACnB;IACD,WAAM,GAAa,EAAE;EAIrB;EAEAC,QAAQ;IACN,IAAI,CAACb,kBAAkB,CAACc,aAAa,EAAE,CAACC,SAAS,CAAEC,MAAkB,IAAK,IAAI,CAACC,UAAU,GAAGD,MAAM,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACpI;EAEAE,gBAAgB,CAACC,KAAU;IACzB,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACF,KAAK;IACrC,IAAI,CAACrB,kBAAkB,CAACwB,eAAe,CAACF,UAAU,CAAC,CAACP,SAAS,CAAEC,MAAqB,IAAK,IAAI,CAACS,aAAa,GAAGT,MAAM,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACtJ;EAEAQ,eAAe;IACb,IAAI,CAAC1B,kBAAkB,CAAC2B,aAAa,CAAC,IAAI,CAACC,OAAO,CAAC,CAChDb,SAAS,CACRC,MAAiB,IAAK,IAAI,CAACf,MAAM,CAAC4B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EACjDX,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAEpBC,OAAO,CAACW,GAAG,CAACZ,KAAK,CAACA,KAAK,CAACa,MAAM,CAAC;MAE/B,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAAChB,KAAK,CAACA,KAAK,CAACa,MAAM,CAAC,EAAE;QACjD,KAAK,MAAMI,YAAY,IAAIjB,KAAK,CAACA,KAAK,CAACa,MAAM,CAACC,GAAG,CAAC,EAAE;UAClD,IAAI,CAACD,MAAM,CAACK,IAAI,CAAC,GAAGJ,GAAG,KAAKG,YAAY,EAAE,CAAC;;;MAI/ChB,OAAO,CAACW,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IAC1B,CAAC,CACF;EACL;CACD;AAlDYjC,mBAAmB,eAL/BD,SAAS,CAAC;EACTwC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWzC,mBAAmB,CAkD/B;SAlDYA,mBAAmB","names":["Component","NewContactComponent","constructor","contactListService","router","id","name","surname","email","password","phone","birthDate","undefined","categoryID","subcategoryID","subcategoryOther","ngOnInit","getCategories","subscribe","result","categories","error","console","onChangeCategory","value","idCategory","target","getSubategories","subcategories","onCreateContact","createContact","contact","navigate","log","errors","key","Object","keys","errorMessage","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\trzci\\projekty-net\\ContactListWeb\\ClientApp\\src\\app\\components\\new-contact\\new-contact.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { Category } from '../models/category';\r\nimport { Contact } from '../models/contact';\r\nimport { Subcategory } from '../models/subcategory';\r\nimport { ContactListService } from '../service/contact-list.service';\r\n\r\n@Component({\r\n  selector: 'app-new-contact',\r\n  templateUrl: './new-contact.component.html',\r\n  styleUrls: ['./new-contact.component.css']\r\n})\r\nexport class NewContactComponent implements OnInit {\r\n  categories: Category[] = [];\r\n  subcategories: Subcategory[] = [];\r\n  categorySelected: string = \"\";\r\n  contact: Contact = {\r\n    id: 0,\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    birthDate: undefined,\r\n    categoryID: 0,\r\n    subcategoryID: null,\r\n    subcategoryOther: null\r\n  };\r\n  errors: string[] = [];\r\n\r\n\r\n  constructor(private contactListService: ContactListService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contactListService.getCategories().subscribe((result: Category[]) => this.categories = result, error => console.error(error));\r\n  }\r\n\r\n  onChangeCategory(value: any) {\r\n    const idCategory = value.target.value;\r\n    this.contactListService.getSubategories(idCategory).subscribe((result: Subcategory[]) => this.subcategories = result, error => console.error(error));\r\n  }\r\n\r\n  onCreateContact(): void {\r\n    this.contactListService.createContact(this.contact)\r\n      .subscribe((\r\n        result: Contact[]) => this.router.navigate(['/']),\r\n        error => {\r\n          console.error(error);\r\n\r\n          console.log(error.error.errors);\r\n\r\n          for (const key of Object.keys(error.error.errors)) {\r\n            for (const errorMessage of error.error.errors[key]) {\r\n              this.errors.push(`${key}: ${errorMessage}`);\r\n            }\r\n          }\r\n\r\n          console.log(this.errors);\r\n        }\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}